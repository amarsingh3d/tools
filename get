#!/bin/bash

# VARS #
version=1.1.0
modified=29/Mar/2019
location=/tmp/get-output

# CREATE TEMP DIR #
mkdir -p $location

# NULL INPUT CAPTURE #
if [ -z $1 ]; then
   echo "You don't appear to have entered a value for the fqdn"
   echo "use 'get help' for syntax assistance"
   exit 1;
fi

# ABOUT #
if [ $1 == 'version' ]; then
   echo "==========================================================="
   echo "'get' version $version written and developed by Graham Trueman"
   echo "==========================================================="
   exit 1;
fi

# HELP #
if [ $1 == 'help' ]; then
   clear
   echo "========"
   echo "GET tool"
   echo "========"
   echo ""
   echo "Syntax: 	get URL foo bar [options]"
   echo ""
   echo ""
   echo "This script allows for the validation of a set of credentials where a URL has basic 401 auth enabled. Replace 'foo' with a valid username and 'bar' with your credentials to view the output."
   echo ""
   echo "The output contains the URL, username, the redacted password, headers response, and the saved file lenght details."
   echo "By default, the downloaded file is removed, providing it is called 'index*'"
   echo ""
   echo "========"
   echo "Options:"
   echo "========"
   echo "Add the 'nocheck' flag to append the '--no-check-certificate' to the command, which may be needed where a certificate mis-match is found."
   echo "Add 'keep' to the end of your query to keep the downloaded output in the default directory ($location)"
   echo ""
   echo "You can cleanup leftover files using 'get clean'"
   echo ""
   echo ""
   echo "=========================="
   echo "'get' version: $version"
   echo "Last modified: $modified"
   echo "=========================="
   echo ""
   exit 1;
fi

# CLEAN DIRECTORY #
if [ $1 == 'clean' ] ; then
  echo "Cleaning leftover files from previous script execution."
  rm -f $location/*
  exit 1;
fi

# ADDITIONAL INPUT MISSING CAPTURE #

if [ -z $2 ]; then
   echo "You don't appear to have entered a username"
   echo "use 'get help' for syntax assistance"
   exit 1;
fi

if [ -z $3 ]; then
   echo "You don't appear to have entered a value for the password"
   echo "use 'get help' for syntax assistance"
   exit 1;
fi

# SCRIPT #

if [[ -z $4 ]] || [[ $4 == 'keep' ]]; then
  	echo "Attempting to access $1 with user $2 and password --REDACTED--"
    wget --user=$2 --password=$3 $1 -P $location/
else
	if [ $4 == 'nocheck' ]; then
		echo "Attempting to access $1 with user $2 and password --REDACTED--"
    wget --user=$2 --password=$3 $1 --no-check-certificate -P $location/
	fi
echo "<End>"
fi

# CLEANUP OPTION #
if [[ $4 == 'keep' ]] || [[ $5 == 'keep' ]] ; then
  echo "Files will remain in the /tmp/get-output directory, and will need to be manually removed"
  exit 1;
else
  echo "Downloaded files have been automatically removed"
  rm -f $location/*
  exit 1;
fi
